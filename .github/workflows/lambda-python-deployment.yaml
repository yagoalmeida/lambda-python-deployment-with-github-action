name: lambda-python-deployment-with-github-action

on:
  workflow_call:
    inputs:
      AWS_DEFAULT_REGION:
        description: 'Region used to deploy code'
        default: 'us-east-1'
        type: string
      bucket_name:
        description: 'Name of the bucket that the code will persist.'
        required: true
        type: string
      lambda_name:
        description: 'Name of the lambda that will have code deploying.'
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

env:
  file_name: code-lambda
  file_name_zip: code-lambda.zip

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements_tests.txt ]; then pip install -r requirements_tests.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Activate venv
        run: |
          python -m venv venv
          source venv/bin/activate
      - name: Create Zipfile archive of Dependencies
        run: |
          zip -r9 $file_name_zip ./venv/lib/python3.10/site-packages
      - name: Add App to Zip file
        run: zip -g $file_name_zip -r . -x '*.git*' -x '*.pytest*' -x '*tests*'

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-lambda
          path: code-lambda.zip
          
  continuous-development:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          role-session-name: deploy-lambda

      - name: Download Lambda code-lambda.zip
        uses: actions/download-artifact@v2
        with:
          name: code-lambda

      - name: Upload to S3
        run: |
          aws s3 cp $file_name_zip s3://${{inputs.bucket_name}}/${{ github.event.repository.full_name }}/$file_name_zip
      - name: Deploy new Lambda
        run: |
          aws lambda update-function-code --function-name ${{inputs.lambda_name}} --s3-bucket ${{inputs.bucket_name}} --s3-key ${{ github.event.repository.full_name }}/$file_name_zip
